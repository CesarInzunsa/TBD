/**
PRACTICA 8
AUTOR: INZUNSA DIAZ CESAR ALEJANDRO
NO. CONTROL: 19400595
FECHA: 24/10/2021
DESCRIPCION: REFORZAR EL USO DE INSERT INTO, UPDATE, INNER JOIN, CREATE VIEW, Y LA FUNCIÓN COUNT()
**/

--PONER EN USO LA BD
USE CURSOSITT;

--B) . Inserta al menos 6 cursos en la bdINSERT INTO CURSOS VALUES('Fund. Ing. Software',1,1,'INGENIERIA'),('Fundamentos de BD',2,2,'BASES DE DATOS'),('Programacion en JAVA',3,3,'PROGRAMACION'),('Topicos avanzados de programacion',4,4,'PROGRAMACION'),('Inteligencia artificial',3,4,'INGENIERIA'),('Curso intermedio de MongoDB',1,2,'BASES DE DATOS');--C) Actualiza la fecha de nacimiento y el teléfono de los alumnos que tengan NULL en--   ambos campos establezca criterios para que no todos queden igualUPDATE ALUMNOS SETFECHA_NACIMIENTO = '1998-12-31',TELEFONO = '311-736-5323'WHERE FECHA_NACIMIENTO IS NULL AND TELEFONO IS NULL AND ID_ALUMNO BETWEEN 1 AND 4;UPDATE ALUMNOS SETFECHA_NACIMIENTO = '1999-01-01',TELEFONO = '311-741-5225'WHERE FECHA_NACIMIENTO IS NULL AND TELEFONO IS NULL AND ID_ALUMNO BETWEEN 5 AND 10;UPDATE ALUMNOS SETFECHA_NACIMIENTO = '1999-02-02',TELEFONO = '311-963-4787'WHERE FECHA_NACIMIENTO IS NULL AND TELEFONO IS NULL AND ID_ALUMNO BETWEEN 11 AND 16;UPDATE ALUMNOS SETFECHA_NACIMIENTO = '1999-03-03',TELEFONO = '311-789-1254'WHERE FECHA_NACIMIENTO IS NULL AND TELEFONO IS NULL AND ID_ALUMNO BETWEEN 16 AND 21;UPDATE ALUMNOS SETFECHA_NACIMIENTO = '1999-04-04',TELEFONO = '311-359-4795'WHERE FECHA_NACIMIENTO IS NULL AND TELEFONO IS NULL AND ID_ALUMNO BETWEEN 22 AND 27;UPDATE ALUMNOS SETFECHA_NACIMIENTO = '1999-05-05',TELEFONO = '311-123-6565'WHERE FECHA_NACIMIENTO IS NULL AND TELEFONO IS NULL AND ID_ALUMNO BETWEEN 27 AND 32;UPDATE ALUMNOS SETFECHA_NACIMIENTO = '1999-06-06',TELEFONO = '311-321-5656'WHERE FECHA_NACIMIENTO IS NULL AND TELEFONO IS NULL AND ID_ALUMNO BETWEEN 33 AND 38;UPDATE ALUMNOS SETFECHA_NACIMIENTO = '1999-07-07',TELEFONO = '311-159-1515'WHERE FECHA_NACIMIENTO IS NULL AND TELEFONO IS NULL AND ID_ALUMNO BETWEEN 39 AND 44;UPDATE ALUMNOS SETFECHA_NACIMIENTO = '1999-08-08',TELEFONO = '311-896-5749'WHERE FECHA_NACIMIENTO IS NULL AND TELEFONO IS NULL AND ID_ALUMNO BETWEEN 45 AND 50;UPDATE ALUMNOS SETFECHA_NACIMIENTO = '1999-09-09',TELEFONO = '311-456-5769'WHERE FECHA_NACIMIENTO IS NULL AND TELEFONO IS NULL AND ID_ALUMNO BETWEEN 51 AND 56;UPDATE ALUMNOS SETFECHA_NACIMIENTO = '1999-10-10',TELEFONO = '311-789-4632'WHERE FECHA_NACIMIENTO IS NULL AND TELEFONO IS NULL AND ID_ALUMNO BETWEEN 56 AND 61;UPDATE ALUMNOS SETFECHA_NACIMIENTO = '1999-11-11',TELEFONO = '311-763-0596'WHERE FECHA_NACIMIENTO IS NULL AND TELEFONO IS NULL AND ID_ALUMNO BETWEEN 62 AND 67;UPDATE ALUMNOS SETFECHA_NACIMIENTO = '1999-12-12',TELEFONO = '311-003-1049'WHERE FECHA_NACIMIENTO IS NULL AND TELEFONO IS NULL AND ID_ALUMNO BETWEEN 68 AND 73;UPDATE ALUMNOS SETFECHA_NACIMIENTO = '1999-01-13',TELEFONO = '311-450-6954'WHERE FECHA_NACIMIENTO IS NULL AND TELEFONO IS NULL AND ID_ALUMNO BETWEEN 74 AND 79;/*D) Insértale cursos a los alumnos de acuerdo a los siguientes rangos:Del 4 al 6, 3 cursos
Del 7 al 20, 2 cursos
Del 20 al 40, 4 cursos
Del 41 en adelante 1 curso*/INSERT INTO ALUMNOS_CURSOS VALUES(115,4),
(112,4),
(4,4),
(2,5),
(2,5),
(5,5),
(115,6),
(4,6),
(3,6),
(5,7),
(2,7),
(3,8),
(5,8),
(3,9),
(3,9),
(116,10),
(112,10),
(115,11),
(3,11),
(115,12),
(4,12),
(116,13),
(4,13),
(4,14),
(112,14),
(3,15),
(112,15),
(5,16),
(112,16),
(1,17),
(114,17),
(112,18),
(112,18),
(114,19),
(4,19),
(3,20),
(116,20),
(116,21),
(115,21),
(116,21),
(115,21),
(114,22),
(111,22),
(115,22),
(112,22),
(5,23),
(112,23),
(2,23),
(112,23),
(115,24),
(4,24),
(113,24),
(4,24),
(116,25),
(111,25),
(113,25),
(116,25),
(114,26),
(114,26),
(3,26),
(3,26),
(111,27),
(116,27),
(114,27),
(3,27),
(113,28),
(113,28),
(5,28),
(3,28),
(5,29),
(1,29),
(113,29),
(113,29),
(5,30),
(5,30),
(114,30),
(112,30),
(4,31),
(111,31),
(116,31),
(4,31),
(116,32),
(111,32),
(113,32),
(5,32),
(1,33),
(3,33),
(113,33),
(2,33),
(111,34),
(115,34),
(112,34),
(114,34),
(114,35),
(116,35),
(116,35),
(113,35),
(114,36),
(113,36),
(114,36),
(114,36),
(115,37),
(112,37),
(5,37),
(5,37),
(113,38),
(113,38),
(115,38),
(111,38),
(114,39),
(111,39),
(113,39),
(116,39),
(113,40),
(2,40),
(4,40),
(111,40),
(112,41),
(113,42),
(2,43),
(115,44),
(1,45),
(116,46),
(5,47),
(116,48),
(1,49),
(116,50),
(112,51),
(111,52),
(112,53),
(111,54),
(1,55),
(116,56),
(111,57),
(115,58),
(1,59),
(114,60),
(4,61),
(112,62),
(1,63),
(112,64),
(114,65),
(114,66),
(5,67),
(114,68),
(111,69),
(1,70),
(113,71),
(114,72),
(116,73),
(4,74),
(112,75),
(114,76),
(111,77),
(111,78),
(111,79),
(112,80);--E) Insértate a ti como alumnos de los cursos y a otros dos de tus compañerosINSERT INTO ALUMNOS VALUES('Inzunsa Diaz Cesar Alejandro','2000-06-03','311-852-9658'),('Licea Langarica Brian Eduardo','2000-07-04','311-147-7425'),('Hernandez Gonzalez Isaac Lluancet','2000-08-05','311-963-5847');--F) Regístrate en al menos dos cursosINSERT INTO ALUMNOS_CURSOS VALUES(1,78),(2,78);--H) Inserta un curso de SqlServer avanzado que lo de tu maestra de TBDINSERT INTO CURSOS VALUES ('SqlServer avanzado',4,4,'BASES DE DATOS');--I) Borra a los alumnos que no estén matriculados y/o inscritos a ningún curso.DELETE FROM ALUMNOS WHERE ID_ALUMNO NOT IN (SELECT ID_ALUMNO FROM CURSOS);--J) Muestra los cursos que tenemos registrados con la siguiente información: ID_PROFE NOMBRE APELLIDOS F_NACIMIENTOSELECT P.ID_PROFE AS [ID MAESTRO], P.NOMBRE AS NOMBRE, P.APELLIDOS AS APELLIDOS, P.FECHA_NACIMIENTO AS [FECHA DE NAICMIENTO]FROM CURSOS CINNER JOIN PROFESORES P ON (C.ID_PROFE = P.ID_PROFE);--K) Muestra los nombres de los cursos en que está inscrito el alumno con el ID = 1.SELECT C.TITULOFROM CURSOS CINNER JOIN ALUMNOS_CURSOS AC ON (C.ID_CURSO = AC.ID_CURSO)WHERE AC.ID_ALUMNO = 1;--L) Mostrar los alumnos con los cursos que cursa cada uno ordenados por el Título del cursos y su nombre (completo)SELECT C.TITULO AS [TITULO DEL CURSO], A.NOMBRE_COMPLETO AS [NOMBRE DEL ALUMNO]FROM ALUMNOS AINNER JOIN ALUMNOS_CURSOS AC ON (A.ID_ALUMNO = AC.ID_ALUMNO)INNER JOIN CURSOS C ON (AC.ID_CURSO = C.ID_CURSO);/*M)
Modifique la anterior consulta para que devuelva los nombres y apellidos de los
alumnos, y los cursos en que se han matriculado, de los alumnos que el nombre de
pila del alumno contenga un E. (HACERLO USANDO INNER JOIN Y WHERE ES
DECIR REALIZA LAS DOS FORMAS DE REALIZAR LA CONSULTA Y QUE LES DE
MISMO RESULTADO)*/SELECT C.TITULO AS [TITULO DEL CURSO], A.NOMBRE_COMPLETO AS [NOMBRE DEL ALUMNO]FROM ALUMNOS AINNER JOIN ALUMNOS_CURSOS AC ON (A.ID_ALUMNO = AC.ID_ALUMNO)INNER JOIN CURSOS C ON (AC.ID_CURSO = C.ID_CURSO)WHERE A.NOMBRE_COMPLETO LIKE 'E%';SELECT C.TITULO AS [TITULO DEL CURSO], A.NOMBRE_COMPLETO AS [NOMBRE DEL ALUMNO]FROM ALUMNOS A, ALUMNOS_CURSOS AC, CURSOS CWHERE A.ID_ALUMNO = AC.ID_ALUMNO AND AC.ID_CURSO = C.ID_CURSO AND A.NOMBRE_COMPLETO LIKE 'E%';/*N)¿Cuantos cursos imparte cada profesor? Construya una consulta que responda a
esta cuestión de modo que el resultado muestre el nombre completo del profesor
acompañado del número de cursos que imparte.*/SELECT (P.NOMBRE + ' '+ P.APELLIDOS) AS [NOMBRE COMPLETO], COUNT(C.ID_CURSO) AS [NO. CURSOS QUE IMPARTE]FROM CURSOS CINNER JOIN PROFESORES P ON (C.ID_PROFE = P.ID_PROFE)GROUP BY P.NOMBRE, P.APELLIDOS;/*O)¿Cuántos alumnos hay matriculados en cada uno de los cursos? Construya una
consulta que responda a esta cuestión de modo que el resultado muestre el título
del curso acompañado del número de alumnos inscritos.*/SELECT C.TITULO AS [TITULO DEL CURSO], COUNT(AC.ID_ALUMNO) AS [NO. ALUMNOS INSCRITOS]FROM ALUMNOS AINNER JOIN ALUMNOS_CURSOS AC ON (A.ID_ALUMNO = AC.ID_ALUMNO)INNER JOIN CURSOS C ON (AC.ID_CURSO = C.ID_CURSO)GROUP BY C.TITULO/*P)
Modifique la anterior consulta de modo que muestre aquellos cursos que el
número de alumnos matriculados sea exactamente de dos alumnos.*/SELECT C.TITULO AS [TITULO DEL CURSO], COUNT(AC.ID_ALUMNO) AS [NO. ALUMNOS INSCRITOS]FROM ALUMNOS AINNER JOIN ALUMNOS_CURSOS AC ON (A.ID_ALUMNO = AC.ID_ALUMNO)INNER JOIN CURSOS C ON (AC.ID_CURSO = C.ID_CURSO)GROUP BY C.TITULOHAVING COUNT(AC.ID_ALUMNO) = 2;/*Q)Por medio de sub consultas mostrar el nombre del cursos, nivel de curso y la
cantidad de alumnos por cada cursos*/SELECT C.TITULO, C.NIVEL,(SELECT COUNT (*) FROM ALUMNOS_CURSOS AC WHERE C.ID_CURSO = AC.ID_CURSO) AS [NO. ALUMNOS]FROM CURSOS C;/*R)Crea una vista con que tenga una estadística de cuantos cursos existen por
CATEGORIA y NIVEL de aquellos cursos que todos los niveles*/CREATE VIEW V_ESTADISTICAS_CATEGORIA AS (SELECT C.CATEGORIA AS CATEGORIA, C.NIVEL, COUNT(C.NIVEL) AS [TOTAL]FROM CURSOS CGROUP BY C.CATEGORIA, C.NIVEL);--S) Muestra la estadística de los cursos que sean del nivel 1 y nivel 2SELECT * FROM V_ESTADISTICAS_CATEGORIA WHERE V_ESTADISTICAS_CATEGORIA.NIVEL BETWEEN 1 AND 2;/*T)Muestra los cursos poniendo el nombre del curso, el nombre del profesor y la
cantidad de alumnos que hay inscritos, el nivel del cursos, la categoria*/SELECT C.TITULO AS CURSO, P.NOMBRE AS PROFESOR, COUNT(A.ID_ALUMNO) AS [NO. ALUMNOS INSCRITOS], C.NIVEL, C.CATEGORIAFROM CURSOS CINNER JOIN PROFESORES P ON (C.ID_PROFE = P.ID_PROFE)INNER JOIN ALUMNOS_CURSOS AC ON (C.ID_CURSO = AC.ID_CURSO)INNER JOIN ALUMNOS A ON (AC.ID_ALUMNO = A.ID_ALUMNO)GROUP BY C.TITULO, P.NOMBRE, C.NIVEL, C.CATEGORIA--U. Vacia los nombres de los alumnos, la fecha de nacimiento y el nombre del curso que--   están tomando en una tabla llamada datos_alumnos_cursos de los alumnos del 1 al 4SELECT A.NOMBRE_COMPLETO AS [Nombre Alumno], A.FECHA_NACIMIENTO AS [Fecha Nacimiento], C.TITULO AS [Nombre Curso]INTO DATOS_ALUMNOS_CURSOSFROM ALUMNOS AINNER JOIN ALUMNOS_CURSOS AC ON (A.ID_ALUMNO = AC.ID_ALUMNO)INNER JOIN CURSOS C ON (AC.ID_CURSO = C.ID_CURSO)WHERE A.ID_ALUMNO BETWEEN 1 AND 4;--V. A esa misma tabla vacíales los registros de los alumnos del 5 a 8
INSERT INTO DATOS_ALUMNOS_CURSOS
SELECT A.NOMBRE_COMPLETO AS [Nombre Alumno], A.FECHA_NACIMIENTO AS [Fecha Nacimiento], C.TITULO AS [Nombre Curso]FROM ALUMNOS AINNER JOIN ALUMNOS_CURSOS AC ON (A.ID_ALUMNO = AC.ID_ALUMNO)INNER JOIN CURSOS C ON (AC.ID_CURSO = C.ID_CURSO)WHERE A.ID_ALUMNO BETWEEN 5 AND 8;